/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_DIOT_PB_H_INCLUDED
#define PB_DIOT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _DataDetail {
    /* 仓位编号 1字节 0~255 */
    uint8_t dpid_126;
    /* 充电宝温度 1字节 实际温度值+80 */
    uint8_t dpid_166;
    /* 仓位状态 1字节 0/1/2/3 */
    uint8_t dpid_127;
    /* 充电宝电量 2字节 0-2900 */
    uint16_t dpid_101;
    /* 充电宝是否能充电 1字节 0/1 */
    uint8_t dpid_124;
    /* 仓位位置传感器 1字节 0/1 */
    uint8_t dpid_177;
    /* 充电使能 1字节 0/1 */
    uint8_t dpid_165;
    /* 充电宝当前充电状态 1字节 0/1 */
    uint8_t dpid_194;
    /* 充电宝是否被拆过 1字节 0/1 */
    uint8_t dpid_196;
    /* 3.5代充电宝剩余容量 2字节 */
    uint16_t dpid_222;
    /* 3.5代充电宝满值容量 2字节 */
    uint16_t dpid_223;
    /* 3.5代充电宝健康状态 1字节 0-100 */
    uint8_t dpid_224;
    /* 3.5代充电宝循环次数 2字节 */
    uint16_t dpid_225;
    /* 3.5代充电宝当前容量百分比 2字节 */
    uint16_t dpid_226;
    /* 充电宝信息 16字节 p050000005915061 */
    char *dpid_125;
    /* 云端你下发的指令码 1字节 */
    uint16_t dpid_115;
    /* 查询指令 1字节 0、1 */
    bool dpid_1;
    /* 室外机断电参数 1字节 0/1/2 */
    uint8_t dpid_227;
    /* 充电宝开关类型控制 1字节 0/1/2 */
    uint8_t dpid_145;
    /* 蓝牙功能状态 1字节 0/1 */
    uint8_t dpid_238;
    /* wifi 名称 64字节 */
    char *dpid_241;
    /* wifi安全 1字节 0/1/2/3/4/ */
    uint8_t dpid_242;
    /* wifi密码 64字节 */
    char *dpid_243;
    /* wifi是否永久保存 1字节 0/1 */
    uint8_t dpid_245;
    /* 清除wifi信息 1字节 0/1 */
    uint8_t dpid_252;
    /* wifi开关 1字节 0/1 */
    uint8_t dpid_246;
    /* 异常码             uint8_t */
    uint8_t dpid_195;
    /* 仓位rx电平       uint8_t */
    uint8_t dpid_240;
    /* 霍尔光电释放 ，string */
    char *dpid_250;
    /* 霍尔光电吸合  ，string */
    char *dpid_251;
} DataDetail;

typedef struct _DataDps {
    /* 状态类型 5个字节 */
    char *dpid_107;
    /* 事件类型 2个字节 */
    uint16_t dpid_106;
    pb_size_t detail_count;
    struct _DataDetail *detail;
    bool dpid_1;
    uint8_t dpid_126;
    uint8_t dpid_115;
    /* 蓝牙功能状态 1字节 0/1 */
    uint8_t dpid_238;
    /* wifi 名称 64字节 */
    char *dpid_241;
    /* wifi安全 1字节 0/1/2/3/4/ */
    uint8_t dpid_242;
    /* wifi密码 64字节 */
    char *dpid_243;
    /* wifi是否永久保存 1字节 0/1 */
    uint8_t dpid_245;
    /* 清除wifi信息 1字节 0/1 */
    uint8_t dpid_252;
    /* wifi开关 1字节 0/1 */
    uint8_t dpid_246;
    /* error code */
    uint16_t dpid_195;
    /* 信号强度 */
    uint8_t dpid_140;
} DataDps;

typedef struct _DataContent {
    bool has_dps;
    DataDps dps;
} DataContent;

typedef struct _Body {
    /* 设备时间，8个字节 */
    uint64_t t;
    /* 协议类型 1个字节 */
    uint8_t protocol;
    bool has_data;
    DataContent data;
} Body;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define DataDetail_init_default                  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, 0, NULL, 0, NULL, 0, 0, 0, 0, 0, NULL, NULL}
#define DataDps_init_default                     {NULL, 0, 0, NULL, 0, 0, 0, 0, NULL, 0, NULL, 0, 0, 0, 0, 0}
#define DataContent_init_default                 {false, DataDps_init_default}
#define Body_init_default                        {0, 0, false, DataContent_init_default}
#define DataDetail_init_zero                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, 0, 0, 0, 0, 0, NULL, 0, NULL, 0, 0, 0, 0, 0, NULL, NULL}
#define DataDps_init_zero                        {NULL, 0, 0, NULL, 0, 0, 0, 0, NULL, 0, NULL, 0, 0, 0, 0, 0}
#define DataContent_init_zero                    {false, DataDps_init_zero}
#define Body_init_zero                           {0, 0, false, DataContent_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define DataDetail_dpid_126_tag                  1
#define DataDetail_dpid_166_tag                  2
#define DataDetail_dpid_127_tag                  3
#define DataDetail_dpid_101_tag                  4
#define DataDetail_dpid_124_tag                  5
#define DataDetail_dpid_177_tag                  6
#define DataDetail_dpid_165_tag                  7
#define DataDetail_dpid_194_tag                  8
#define DataDetail_dpid_196_tag                  9
#define DataDetail_dpid_222_tag                  10
#define DataDetail_dpid_223_tag                  11
#define DataDetail_dpid_224_tag                  12
#define DataDetail_dpid_225_tag                  13
#define DataDetail_dpid_226_tag                  14
#define DataDetail_dpid_125_tag                  15
#define DataDetail_dpid_115_tag                  16
#define DataDetail_dpid_1_tag                    17
#define DataDetail_dpid_227_tag                  18
#define DataDetail_dpid_145_tag                  19
#define DataDetail_dpid_238_tag                  20
#define DataDetail_dpid_241_tag                  21
#define DataDetail_dpid_242_tag                  22
#define DataDetail_dpid_243_tag                  23
#define DataDetail_dpid_245_tag                  24
#define DataDetail_dpid_252_tag                  25
#define DataDetail_dpid_246_tag                  26
#define DataDetail_dpid_195_tag                  27
#define DataDetail_dpid_240_tag                  28
#define DataDetail_dpid_250_tag                  29
#define DataDetail_dpid_251_tag                  30
#define DataDps_dpid_107_tag                     1
#define DataDps_dpid_106_tag                     2
#define DataDps_detail_tag                       3
#define DataDps_dpid_1_tag                       4
#define DataDps_dpid_126_tag                     5
#define DataDps_dpid_115_tag                     6
#define DataDps_dpid_238_tag                     7
#define DataDps_dpid_241_tag                     8
#define DataDps_dpid_242_tag                     9
#define DataDps_dpid_243_tag                     10
#define DataDps_dpid_245_tag                     11
#define DataDps_dpid_252_tag                     12
#define DataDps_dpid_246_tag                     13
#define DataDps_dpid_195_tag                     14
#define DataDps_dpid_140_tag                     15
#define DataContent_dps_tag                      1
#define Body_t_tag                               1
#define Body_protocol_tag                        2
#define Body_data_tag                            3

/* Struct field encoding specification for nanopb */
#define DataDetail_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_126,          1) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_166,          2) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_127,          3) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_101,          4) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_124,          5) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_177,          6) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_165,          7) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_194,          8) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_196,          9) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_222,         10) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_223,         11) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_224,         12) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_225,         13) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_226,         14) \
X(a, POINTER,  SINGULAR, STRING,   dpid_125,         15) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_115,         16) \
X(a, STATIC,   SINGULAR, BOOL,     dpid_1,           17) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_227,         18) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_145,         19) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_238,         20) \
X(a, POINTER,  SINGULAR, STRING,   dpid_241,         21) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_242,         22) \
X(a, POINTER,  SINGULAR, STRING,   dpid_243,         23) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_245,         24) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_252,         25) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_246,         26) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_195,         27) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_240,         28) \
X(a, POINTER,  SINGULAR, STRING,   dpid_250,         29) \
X(a, POINTER,  SINGULAR, STRING,   dpid_251,         30)
#define DataDetail_CALLBACK NULL
#define DataDetail_DEFAULT NULL

#define DataDps_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   dpid_107,          1) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_106,          2) \
X(a, POINTER,  REPEATED, MESSAGE,  detail,            3) \
X(a, STATIC,   SINGULAR, BOOL,     dpid_1,            4) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_126,          5) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_115,          6) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_238,          7) \
X(a, POINTER,  SINGULAR, STRING,   dpid_241,          8) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_242,          9) \
X(a, POINTER,  SINGULAR, STRING,   dpid_243,         10) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_245,         11) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_252,         12) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_246,         13) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_195,         14) \
X(a, STATIC,   SINGULAR, UINT32,   dpid_140,         15)
#define DataDps_CALLBACK NULL
#define DataDps_DEFAULT NULL
#define DataDps_detail_MSGTYPE DataDetail

#define DataContent_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  dps,               1)
#define DataContent_CALLBACK NULL
#define DataContent_DEFAULT NULL
#define DataContent_dps_MSGTYPE DataDps

#define Body_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   t,                 1) \
X(a, STATIC,   SINGULAR, UINT32,   protocol,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              3)
#define Body_CALLBACK NULL
#define Body_DEFAULT NULL
#define Body_data_MSGTYPE DataContent

extern const pb_msgdesc_t DataDetail_msg;
extern const pb_msgdesc_t DataDps_msg;
extern const pb_msgdesc_t DataContent_msg;
extern const pb_msgdesc_t Body_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DataDetail_fields &DataDetail_msg
#define DataDps_fields &DataDps_msg
#define DataContent_fields &DataContent_msg
#define Body_fields &Body_msg

/* Maximum encoded size of messages (where known) */
/* DataDetail_size depends on runtime parameters */
/* DataDps_size depends on runtime parameters */
/* DataContent_size depends on runtime parameters */
/* Body_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
