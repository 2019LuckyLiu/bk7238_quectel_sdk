/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_COMMON_PB_H_INCLUDED
#define PB_COMMON_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* ============================ 公共参数 ============================
 公共参数 */
typedef struct _sysReq {
    /* 时间，秒级 */
    int64_t time;
    /* 消息追踪标记，由云端分配 */
    char *traceId;
} sysReq;

typedef struct _sysRsp {
    /* 时间，秒级 */
    int64_t time;
    /* 消息追踪标记，由云端分配 */
    char *traceId;
    /* 由应答类型topic携带
 0:正常 非0表示异常 */
    int16_t result;
} sysRsp;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define sysReq_init_default                      {0, NULL}
#define sysRsp_init_default                      {0, NULL, 0}
#define sysReq_init_zero                         {0, NULL}
#define sysRsp_init_zero                         {0, NULL, 0}

/* Field tags (for use in manual encoding/decoding) */
#define sysReq_time_tag                          1
#define sysReq_traceId_tag                       2
#define sysRsp_time_tag                          1
#define sysRsp_traceId_tag                       2
#define sysRsp_result_tag                        3

/* Struct field encoding specification for nanopb */
#define sysReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    time,              1) \
X(a, POINTER,  SINGULAR, STRING,   traceId,           2)
#define sysReq_CALLBACK NULL
#define sysReq_DEFAULT NULL

#define sysRsp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    time,              1) \
X(a, POINTER,  SINGULAR, STRING,   traceId,           2) \
X(a, STATIC,   SINGULAR, INT32,    result,            3)
#define sysRsp_CALLBACK NULL
#define sysRsp_DEFAULT NULL

extern const pb_msgdesc_t sysReq_msg;
extern const pb_msgdesc_t sysRsp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define sysReq_fields &sysReq_msg
#define sysRsp_fields &sysRsp_msg

/* Maximum encoded size of messages (where known) */
/* sysReq_size depends on runtime parameters */
/* sysRsp_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
