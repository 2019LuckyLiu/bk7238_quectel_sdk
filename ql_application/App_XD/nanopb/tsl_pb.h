/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_TSL_PB_H_INCLUDED
#define PB_TSL_PB_H_INCLUDED
#include <pb.h>
#include "common_pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _prop {
    prop_reserved0Prop = 0,
    prop_iccidProp = 1,
    prop_loadReportIntervalProp = 2,
    prop_noLoadReportIntervalProp = 3,
    prop_noLoadPowerOffDurationProp = 4,
    prop_fullPowerOffDurationProp = 5,
    prop_powerOffSelfRecoveryProp = 6,
    prop_temperatureThresholdProp = 7,
    prop_loadPowerThresholdProp = 8,
    prop_warnIntervalProp = 9
} prop;

/* 仓位充电状态 */
typedef enum _slotState {
    /* 断电 */
    slotState_powerOffSlotState = 0,
    /* 通电 */
    slotState_powerOnSlotState = 1
} slotState;

typedef enum _reportType {
    /* 保留位 */
    reportType_reserved0Report = 0,
    /* 通电上报 */
    reportType_powerOnReport = 1,
    /* 重连上报 */
    reportType_reconnectReport = 2,
    /* 定时上报 */
    reportType_intervalReport = 3
} reportType;

typedef enum _info {
    info_reserved0Info = 0,
    /* 负载通电 */
    info_loadPowerOnInfo = 1,
    /* 空载断电 */
    info_noLoadPowerOffInfo = 2,
    /* 充满断电 */
    info_fullChargingPowerOffInfo = 3,
    /* 过载断电(单充电口) */
    info_highLoadPowerOffInfo = 4,
    /* 高温断电 */
    info_highTempPowerOffInfo = 5,
    /* 自动断电(到点断电) */
    info_autoPowerOffInfo = 6,
    /* 过载断电(单充电口) */
    info_totalHighLoadPowerOffInfo = 7
} info;

typedef enum _hardwareWarn {
    hardwareWarn_reserved0Warn = 0,
    /* 温度告警 */
    hardwareWarn_temperatureWarn = 1,
    /* 负载过高 */
    hardwareWarn_highLoadWarn = 2,
    /* 总负载过高 */
    hardwareWarn_totalHighLoadWarn = 3
} hardwareWarn;

/* Struct definitions */
typedef struct _property {
    /* 联网模块iccid(只读) */
    char *iccid;
    /* 有负载定时上报间隔(读写，单位s，默认600s) */
    uint16_t loadReportInterval;
    /* 空负载定时上报间隔(读写，单位s，默认1800s) */
    uint16_t noLoadReportInterval;
    /* 空载自断电时长(读写，单位s，默认2分钟，为0表示不自动断电) */
    uint16_t noLoadPowerOffDuration;
    /* 满充自断电时长(读写，单位s，默认0分钟，为0表示不自动断电) */
    uint16_t fullPowerOffDuration;
    /* 断电自恢复开关(读写，默认false) */
    bool powerOffSelfRecovery;
    /* 温度告警阈值(读写) */
    int16_t temperatureThreshold;
    /* 充电口可负载最大功率(只读) */
    uint16_t loadPowerThreshold;
    /* 同一告警触发间隔(读写，单位s，默认600s) */
    uint16_t warnInterval;
    /* 桩可负载最大功率(只读) */
    uint32_t totalLoadPowerThreshold;
    /* 充电口过载告警阈值(默认80%) */
    uint32_t loadPowerWarnThreshold;
    /* 桩过载告警阈值(默认80%) */
    uint32_t totalLoadPowerWarnThreshold;
} property;

/* /sys/${productKey}/${deviceKey}/property/post */
typedef struct _propPostReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    property params;
} propPostReq;

typedef struct _propGetReqParams {
    pb_size_t props_count;
    prop *props;
} propGetReqParams;

/* /sys/${productKey}/${deviceKey}/property/get */
typedef struct _propGetReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    propGetReqParams params;
} propGetReq;

/* /sys/${productKey}/${deviceKey}/property/get/reply */
typedef struct _propGetRsp {
    /* 公共参数 */
    bool has_sys;
    sysRsp sys;
    /* 应答数据 */
    bool has_data;
    property data;
} propGetRsp;

/* /sys/${productKey}/${deviceKey}/property/set */
typedef struct _propSetReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    property params;
} propSetReq;

/* /sys/${productKey}/${deviceKey}/property/set/reply */
typedef struct _propSetRsp {
    /* 公共参数 */
    bool has_sys;
    sysRsp sys;
    /* 应答数据 */
    bool has_data;
    property data;
} propSetRsp;

/* 仓位信息 */
typedef struct _slotDetail {
    /* 仓位号 */
    uint8_t slot;
    /* 充电状态 */
    slotState state;
    /* 功率(0.1W) */
    uint16_t power;
    /* 电压(0.01V) */
    uint16_t voltage;
    /* 电流(0.001A) */
    uint16_t current;
    /* 剩余时长(秒) */
    uint32_t leftTime;
    /* 电量(0.001kwh) */
    uint16_t energy;
    /* 充电口温度 */
    int16_t temperature;
} slotDetail;

/* 桩信息 */
typedef struct _stakeDetail {
    /* 仓位信息 */
    pb_size_t slots_count;
    struct _slotDetail *slots;
    /* GSM信号强度 */
    uint8_t gsmSignal;
    /* 桩温度 */
    int16_t temperature;
} stakeDetail;

typedef struct _stateParams {
    reportType reportType;
    bool has_detail;
    stakeDetail detail;
} stateParams;

/* /sys/${productKey}/${deviceKey}/info/post/state */
typedef struct _stateInfoReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    stateParams params;
} stateInfoReq;

/* 充电事件 */
typedef struct _chargingInfoParams {
    /* 仓位号 */
    uint8_t slot;
    /* 充电状态 */
    slotState state;
    /* 状态信息 */
    info info;
} chargingInfoParams;

/* /sys/${productKey}/${deviceKey}/info/post/charging */
typedef struct _chargingInfoReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    chargingInfoParams params;
} chargingInfoReq;

/* 告警事件 */
typedef struct _hardwareWarnParams {
    /* 仓位号 */
    uint8_t slot;
    /* 充电状态 */
    slotState state;
    /* 告警信息 */
    hardwareWarn warn;
} hardwareWarnParams;

/* /sys/${productKey}/${deviceKey}/warn/post/hardware */
typedef struct _hardwareWarnReq {
    /* 公共参数 */
    bool has_sys;
    sysRsp sys;
    /* 业务参数 */
    bool has_params;
    hardwareWarnParams params;
} hardwareWarnReq;

typedef struct _hardwareWarnServiceParams {
    /* 仓位号 */
    uint8_t slot;
    /* 告警靜默时长(静默期内不再告警,单位s) */
    uint32_t silenceDuration;
} hardwareWarnServiceParams;

/* /sys/${productKey}/${deviceKey}/service/post/hardwareWarn */
typedef struct _hardwareWarnServiceReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    hardwareWarnServiceParams params;
} hardwareWarnServiceReq;

/* /sys/${productKey}/${deviceKey}/service/reply/hardwareWarn */
typedef struct _hardwareWarnServiceRsp {
    /* 公共参数 */
    bool has_sys;
    sysRsp sys;
    /* 业务参数 */
    bool has_data;
    stakeDetail data;
} hardwareWarnServiceRsp;

typedef struct _manualReportParams {
    /* 255:全量 其他值按单仓获取 */
    uint8_t slot;
} manualReportParams;

/* /sys/${productKey}/${deviceKey}/service/post/manualReport */
typedef struct _manualReportReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    manualReportParams params;
} manualReportReq;

/* /sys/${productKey}/${deviceKey}/service/reply/manualReport */
typedef struct _manualReportRsp {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_data;
    stakeDetail data;
} manualReportRsp;

typedef struct _enableChargeParams {
    /* 仓位号 */
    uint8_t slot;
    /* 充电时长(秒) */
    uint32_t duration;
} enableChargeParams;

/* /sys/${productKey}/${deviceKey}/service/post/enableCharge */
typedef struct _enableChargeReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    enableChargeParams params;
} enableChargeReq;

/* /sys/${productKey}/${deviceKey}/service/reply/enableCharge */
typedef struct _enableChargeRsp {
    /* 公共参数 */
    bool has_sys;
    sysRsp sys;
    /* 业务参数 */
    bool has_data;
    stakeDetail data;
} enableChargeRsp;

typedef struct _disableChargeParams {
    /* 仓位号 */
    uint8_t slot;
} disableChargeParams;

/* /sys/${productKey}/${deviceKey}/service/post/disableCharge */
typedef struct _disableChargeReq {
    /* 公共参数 */
    bool has_sys;
    sysReq sys;
    /* 业务参数 */
    bool has_params;
    disableChargeParams params;
} disableChargeReq;

/* /sys/${productKey}/${deviceKey}/service/reply/disableCharge */
typedef struct _disableChargeRsp {
    /* 公共参数 */
    bool has_sys;
    sysRsp sys;
    /* 业务参数 */
    bool has_data;
    stakeDetail data;
} disableChargeRsp;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _prop_MIN prop_reserved0Prop
#define _prop_MAX prop_warnIntervalProp
#define _prop_ARRAYSIZE ((prop)(prop_warnIntervalProp+1))

#define _slotState_MIN slotState_powerOffSlotState
#define _slotState_MAX slotState_powerOnSlotState
#define _slotState_ARRAYSIZE ((slotState)(slotState_powerOnSlotState+1))

#define _reportType_MIN reportType_reserved0Report
#define _reportType_MAX reportType_intervalReport
#define _reportType_ARRAYSIZE ((reportType)(reportType_intervalReport+1))

#define _info_MIN info_reserved0Info
#define _info_MAX info_totalHighLoadPowerOffInfo
#define _info_ARRAYSIZE ((info)(info_totalHighLoadPowerOffInfo+1))

#define _hardwareWarn_MIN hardwareWarn_reserved0Warn
#define _hardwareWarn_MAX hardwareWarn_totalHighLoadWarn
#define _hardwareWarn_ARRAYSIZE ((hardwareWarn)(hardwareWarn_totalHighLoadWarn+1))




#define propGetReqParams_props_ENUMTYPE prop




#define slotDetail_state_ENUMTYPE slotState



#define stateParams_reportType_ENUMTYPE reportType


#define chargingInfoParams_state_ENUMTYPE slotState
#define chargingInfoParams_info_ENUMTYPE info


#define hardwareWarnParams_state_ENUMTYPE slotState
#define hardwareWarnParams_warn_ENUMTYPE hardwareWarn














/* Initializer values for message structs */
#define property_init_default                    {NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define propPostReq_init_default                 {false, sysReq_init_default, false, property_init_default}
#define propGetReq_init_default                  {false, sysReq_init_default, false, propGetReqParams_init_default}
#define propGetReqParams_init_default            {0, NULL}
#define propGetRsp_init_default                  {false, sysRsp_init_default, false, property_init_default}
#define propSetReq_init_default                  {false, sysReq_init_default, false, property_init_default}
#define propSetRsp_init_default                  {false, sysRsp_init_default, false, property_init_default}
#define slotDetail_init_default                  {0, _slotState_MIN, 0, 0, 0, 0, 0, 0}
#define stakeDetail_init_default                 {0, NULL, 0, 0}
#define stateInfoReq_init_default                {false, sysReq_init_default, false, stateParams_init_default}
#define stateParams_init_default                 {_reportType_MIN, false, stakeDetail_init_default}
#define chargingInfoReq_init_default             {false, sysReq_init_default, false, chargingInfoParams_init_default}
#define chargingInfoParams_init_default          {0, _slotState_MIN, _info_MIN}
#define hardwareWarnReq_init_default             {false, sysRsp_init_default, false, hardwareWarnParams_init_default}
#define hardwareWarnParams_init_default          {0, _slotState_MIN, _hardwareWarn_MIN}
#define hardwareWarnServiceReq_init_default      {false, sysReq_init_default, false, hardwareWarnServiceParams_init_default}
#define hardwareWarnServiceParams_init_default   {0, 0}
#define hardwareWarnServiceRsp_init_default      {false, sysRsp_init_default, false, stakeDetail_init_default}
#define manualReportReq_init_default             {false, sysReq_init_default, false, manualReportParams_init_default}
#define manualReportParams_init_default          {0}
#define manualReportRsp_init_default             {false, sysReq_init_default, false, stakeDetail_init_default}
#define enableChargeReq_init_default             {false, sysReq_init_default, false, enableChargeParams_init_default}
#define enableChargeParams_init_default          {0, 0}
#define enableChargeRsp_init_default             {false, sysRsp_init_default, false, stakeDetail_init_default}
#define disableChargeReq_init_default            {false, sysReq_init_default, false, disableChargeParams_init_default}
#define disableChargeParams_init_default         {0}
#define disableChargeRsp_init_default            {false, sysRsp_init_default, false, stakeDetail_init_default}
#define property_init_zero                       {NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define propPostReq_init_zero                    {false, sysReq_init_zero, false, property_init_zero}
#define propGetReq_init_zero                     {false, sysReq_init_zero, false, propGetReqParams_init_zero}
#define propGetReqParams_init_zero               {0, NULL}
#define propGetRsp_init_zero                     {false, sysRsp_init_zero, false, property_init_zero}
#define propSetReq_init_zero                     {false, sysReq_init_zero, false, property_init_zero}
#define propSetRsp_init_zero                     {false, sysRsp_init_zero, false, property_init_zero}
#define slotDetail_init_zero                     {0, _slotState_MIN, 0, 0, 0, 0, 0, 0}
#define stakeDetail_init_zero                    {0, NULL, 0, 0}
#define stateInfoReq_init_zero                   {false, sysReq_init_zero, false, stateParams_init_zero}
#define stateParams_init_zero                    {_reportType_MIN, false, stakeDetail_init_zero}
#define chargingInfoReq_init_zero                {false, sysReq_init_zero, false, chargingInfoParams_init_zero}
#define chargingInfoParams_init_zero             {0, _slotState_MIN, _info_MIN}
#define hardwareWarnReq_init_zero                {false, sysRsp_init_zero, false, hardwareWarnParams_init_zero}
#define hardwareWarnParams_init_zero             {0, _slotState_MIN, _hardwareWarn_MIN}
#define hardwareWarnServiceReq_init_zero         {false, sysReq_init_zero, false, hardwareWarnServiceParams_init_zero}
#define hardwareWarnServiceParams_init_zero      {0, 0}
#define hardwareWarnServiceRsp_init_zero         {false, sysRsp_init_zero, false, stakeDetail_init_zero}
#define manualReportReq_init_zero                {false, sysReq_init_zero, false, manualReportParams_init_zero}
#define manualReportParams_init_zero             {0}
#define manualReportRsp_init_zero                {false, sysReq_init_zero, false, stakeDetail_init_zero}
#define enableChargeReq_init_zero                {false, sysReq_init_zero, false, enableChargeParams_init_zero}
#define enableChargeParams_init_zero             {0, 0}
#define enableChargeRsp_init_zero                {false, sysRsp_init_zero, false, stakeDetail_init_zero}
#define disableChargeReq_init_zero               {false, sysReq_init_zero, false, disableChargeParams_init_zero}
#define disableChargeParams_init_zero            {0}
#define disableChargeRsp_init_zero               {false, sysRsp_init_zero, false, stakeDetail_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define property_iccid_tag                       1
#define property_loadReportInterval_tag          2
#define property_noLoadReportInterval_tag        3
#define property_noLoadPowerOffDuration_tag      4
#define property_fullPowerOffDuration_tag        5
#define property_powerOffSelfRecovery_tag        6
#define property_temperatureThreshold_tag        7
#define property_loadPowerThreshold_tag          8
#define property_warnInterval_tag                9
#define property_totalLoadPowerThreshold_tag     10
#define property_loadPowerWarnThreshold_tag      11
#define property_totalLoadPowerWarnThreshold_tag 12
#define propPostReq_sys_tag                      1
#define propPostReq_params_tag                   2
#define propGetReqParams_props_tag               1
#define propGetReq_sys_tag                       1
#define propGetReq_params_tag                    2
#define propGetRsp_sys_tag                       1
#define propGetRsp_data_tag                      2
#define propSetReq_sys_tag                       1
#define propSetReq_params_tag                    2
#define propSetRsp_sys_tag                       1
#define propSetRsp_data_tag                      2
#define slotDetail_slot_tag                      1
#define slotDetail_state_tag                     2
#define slotDetail_power_tag                     3
#define slotDetail_voltage_tag                   4
#define slotDetail_current_tag                   5
#define slotDetail_leftTime_tag                  6
#define slotDetail_energy_tag                    7
#define slotDetail_temperature_tag               8
#define stakeDetail_slots_tag                    1
#define stakeDetail_gsmSignal_tag                2
#define stakeDetail_temperature_tag              3
#define stateParams_reportType_tag               1
#define stateParams_detail_tag                   2
#define stateInfoReq_sys_tag                     1
#define stateInfoReq_params_tag                  2
#define chargingInfoParams_slot_tag              1
#define chargingInfoParams_state_tag             2
#define chargingInfoParams_info_tag              3
#define chargingInfoReq_sys_tag                  1
#define chargingInfoReq_params_tag               2
#define hardwareWarnParams_slot_tag              1
#define hardwareWarnParams_state_tag             2
#define hardwareWarnParams_warn_tag              3
#define hardwareWarnReq_sys_tag                  1
#define hardwareWarnReq_params_tag               2
#define hardwareWarnServiceParams_slot_tag       1
#define hardwareWarnServiceParams_silenceDuration_tag 2
#define hardwareWarnServiceReq_sys_tag           1
#define hardwareWarnServiceReq_params_tag        2
#define hardwareWarnServiceRsp_sys_tag           1
#define hardwareWarnServiceRsp_data_tag          2
#define manualReportParams_slot_tag              1
#define manualReportReq_sys_tag                  1
#define manualReportReq_params_tag               2
#define manualReportRsp_sys_tag                  1
#define manualReportRsp_data_tag                 2
#define enableChargeParams_slot_tag              1
#define enableChargeParams_duration_tag          2
#define enableChargeReq_sys_tag                  1
#define enableChargeReq_params_tag               2
#define enableChargeRsp_sys_tag                  1
#define enableChargeRsp_data_tag                 2
#define disableChargeParams_slot_tag             1
#define disableChargeReq_sys_tag                 1
#define disableChargeReq_params_tag              2
#define disableChargeRsp_sys_tag                 1
#define disableChargeRsp_data_tag                2

/* Struct field encoding specification for nanopb */
#define property_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   iccid,             1) \
X(a, STATIC,   SINGULAR, UINT32,   loadReportInterval,   2) \
X(a, STATIC,   SINGULAR, UINT32,   noLoadReportInterval,   3) \
X(a, STATIC,   SINGULAR, UINT32,   noLoadPowerOffDuration,   4) \
X(a, STATIC,   SINGULAR, UINT32,   fullPowerOffDuration,   5) \
X(a, STATIC,   SINGULAR, BOOL,     powerOffSelfRecovery,   6) \
X(a, STATIC,   SINGULAR, INT32,    temperatureThreshold,   7) \
X(a, STATIC,   SINGULAR, UINT32,   loadPowerThreshold,   8) \
X(a, STATIC,   SINGULAR, UINT32,   warnInterval,      9) \
X(a, STATIC,   SINGULAR, UINT32,   totalLoadPowerThreshold,  10) \
X(a, STATIC,   SINGULAR, UINT32,   loadPowerWarnThreshold,  11) \
X(a, STATIC,   SINGULAR, UINT32,   totalLoadPowerWarnThreshold,  12)
#define property_CALLBACK NULL
#define property_DEFAULT NULL

#define propPostReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define propPostReq_CALLBACK NULL
#define propPostReq_DEFAULT NULL
#define propPostReq_sys_MSGTYPE sysReq
#define propPostReq_params_MSGTYPE property

#define propGetReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define propGetReq_CALLBACK NULL
#define propGetReq_DEFAULT NULL
#define propGetReq_sys_MSGTYPE sysReq
#define propGetReq_params_MSGTYPE propGetReqParams

#define propGetReqParams_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, UENUM,    props,             1)
#define propGetReqParams_CALLBACK NULL
#define propGetReqParams_DEFAULT NULL

#define propGetRsp_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              2)
#define propGetRsp_CALLBACK NULL
#define propGetRsp_DEFAULT NULL
#define propGetRsp_sys_MSGTYPE sysRsp
#define propGetRsp_data_MSGTYPE property

#define propSetReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define propSetReq_CALLBACK NULL
#define propSetReq_DEFAULT NULL
#define propSetReq_sys_MSGTYPE sysReq
#define propSetReq_params_MSGTYPE property

#define propSetRsp_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              2)
#define propSetRsp_CALLBACK NULL
#define propSetRsp_DEFAULT NULL
#define propSetRsp_sys_MSGTYPE sysRsp
#define propSetRsp_data_MSGTYPE property

#define slotDetail_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              1) \
X(a, STATIC,   SINGULAR, UENUM,    state,             2) \
X(a, STATIC,   SINGULAR, UINT32,   power,             3) \
X(a, STATIC,   SINGULAR, UINT32,   voltage,           4) \
X(a, STATIC,   SINGULAR, UINT32,   current,           5) \
X(a, STATIC,   SINGULAR, UINT32,   leftTime,          6) \
X(a, STATIC,   SINGULAR, UINT32,   energy,            7) \
X(a, STATIC,   SINGULAR, INT32,    temperature,       8)
#define slotDetail_CALLBACK NULL
#define slotDetail_DEFAULT NULL

#define stakeDetail_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  slots,             1) \
X(a, STATIC,   SINGULAR, UINT32,   gsmSignal,         2) \
X(a, STATIC,   SINGULAR, INT32,    temperature,       3)
#define stakeDetail_CALLBACK NULL
#define stakeDetail_DEFAULT NULL
#define stakeDetail_slots_MSGTYPE slotDetail

#define stateInfoReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define stateInfoReq_CALLBACK NULL
#define stateInfoReq_DEFAULT NULL
#define stateInfoReq_sys_MSGTYPE sysReq
#define stateInfoReq_params_MSGTYPE stateParams

#define stateParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    reportType,        1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  detail,            2)
#define stateParams_CALLBACK NULL
#define stateParams_DEFAULT NULL
#define stateParams_detail_MSGTYPE stakeDetail

#define chargingInfoReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define chargingInfoReq_CALLBACK NULL
#define chargingInfoReq_DEFAULT NULL
#define chargingInfoReq_sys_MSGTYPE sysReq
#define chargingInfoReq_params_MSGTYPE chargingInfoParams

#define chargingInfoParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              1) \
X(a, STATIC,   SINGULAR, UENUM,    state,             2) \
X(a, STATIC,   SINGULAR, UENUM,    info,              3)
#define chargingInfoParams_CALLBACK NULL
#define chargingInfoParams_DEFAULT NULL

#define hardwareWarnReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define hardwareWarnReq_CALLBACK NULL
#define hardwareWarnReq_DEFAULT NULL
#define hardwareWarnReq_sys_MSGTYPE sysRsp
#define hardwareWarnReq_params_MSGTYPE hardwareWarnParams

#define hardwareWarnParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              1) \
X(a, STATIC,   SINGULAR, UENUM,    state,             2) \
X(a, STATIC,   SINGULAR, UENUM,    warn,              3)
#define hardwareWarnParams_CALLBACK NULL
#define hardwareWarnParams_DEFAULT NULL

#define hardwareWarnServiceReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define hardwareWarnServiceReq_CALLBACK NULL
#define hardwareWarnServiceReq_DEFAULT NULL
#define hardwareWarnServiceReq_sys_MSGTYPE sysReq
#define hardwareWarnServiceReq_params_MSGTYPE hardwareWarnServiceParams

#define hardwareWarnServiceParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              1) \
X(a, STATIC,   SINGULAR, UINT32,   silenceDuration,   2)
#define hardwareWarnServiceParams_CALLBACK NULL
#define hardwareWarnServiceParams_DEFAULT NULL

#define hardwareWarnServiceRsp_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              2)
#define hardwareWarnServiceRsp_CALLBACK NULL
#define hardwareWarnServiceRsp_DEFAULT NULL
#define hardwareWarnServiceRsp_sys_MSGTYPE sysRsp
#define hardwareWarnServiceRsp_data_MSGTYPE stakeDetail

#define manualReportReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define manualReportReq_CALLBACK NULL
#define manualReportReq_DEFAULT NULL
#define manualReportReq_sys_MSGTYPE sysReq
#define manualReportReq_params_MSGTYPE manualReportParams

#define manualReportParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              1)
#define manualReportParams_CALLBACK NULL
#define manualReportParams_DEFAULT NULL

#define manualReportRsp_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              2)
#define manualReportRsp_CALLBACK NULL
#define manualReportRsp_DEFAULT NULL
#define manualReportRsp_sys_MSGTYPE sysReq
#define manualReportRsp_data_MSGTYPE stakeDetail

#define enableChargeReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define enableChargeReq_CALLBACK NULL
#define enableChargeReq_DEFAULT NULL
#define enableChargeReq_sys_MSGTYPE sysReq
#define enableChargeReq_params_MSGTYPE enableChargeParams

#define enableChargeParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              1) \
X(a, STATIC,   SINGULAR, UINT32,   duration,          2)
#define enableChargeParams_CALLBACK NULL
#define enableChargeParams_DEFAULT NULL

#define enableChargeRsp_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              2)
#define enableChargeRsp_CALLBACK NULL
#define enableChargeRsp_DEFAULT NULL
#define enableChargeRsp_sys_MSGTYPE sysRsp
#define enableChargeRsp_data_MSGTYPE stakeDetail

#define disableChargeReq_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  params,            2)
#define disableChargeReq_CALLBACK NULL
#define disableChargeReq_DEFAULT NULL
#define disableChargeReq_sys_MSGTYPE sysReq
#define disableChargeReq_params_MSGTYPE disableChargeParams

#define disableChargeParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              1)
#define disableChargeParams_CALLBACK NULL
#define disableChargeParams_DEFAULT NULL

#define disableChargeRsp_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sys,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              2)
#define disableChargeRsp_CALLBACK NULL
#define disableChargeRsp_DEFAULT NULL
#define disableChargeRsp_sys_MSGTYPE sysRsp
#define disableChargeRsp_data_MSGTYPE stakeDetail

extern const pb_msgdesc_t property_msg;
extern const pb_msgdesc_t propPostReq_msg;
extern const pb_msgdesc_t propGetReq_msg;
extern const pb_msgdesc_t propGetReqParams_msg;
extern const pb_msgdesc_t propGetRsp_msg;
extern const pb_msgdesc_t propSetReq_msg;
extern const pb_msgdesc_t propSetRsp_msg;
extern const pb_msgdesc_t slotDetail_msg;
extern const pb_msgdesc_t stakeDetail_msg;
extern const pb_msgdesc_t stateInfoReq_msg;
extern const pb_msgdesc_t stateParams_msg;
extern const pb_msgdesc_t chargingInfoReq_msg;
extern const pb_msgdesc_t chargingInfoParams_msg;
extern const pb_msgdesc_t hardwareWarnReq_msg;
extern const pb_msgdesc_t hardwareWarnParams_msg;
extern const pb_msgdesc_t hardwareWarnServiceReq_msg;
extern const pb_msgdesc_t hardwareWarnServiceParams_msg;
extern const pb_msgdesc_t hardwareWarnServiceRsp_msg;
extern const pb_msgdesc_t manualReportReq_msg;
extern const pb_msgdesc_t manualReportParams_msg;
extern const pb_msgdesc_t manualReportRsp_msg;
extern const pb_msgdesc_t enableChargeReq_msg;
extern const pb_msgdesc_t enableChargeParams_msg;
extern const pb_msgdesc_t enableChargeRsp_msg;
extern const pb_msgdesc_t disableChargeReq_msg;
extern const pb_msgdesc_t disableChargeParams_msg;
extern const pb_msgdesc_t disableChargeRsp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define property_fields &property_msg
#define propPostReq_fields &propPostReq_msg
#define propGetReq_fields &propGetReq_msg
#define propGetReqParams_fields &propGetReqParams_msg
#define propGetRsp_fields &propGetRsp_msg
#define propSetReq_fields &propSetReq_msg
#define propSetRsp_fields &propSetRsp_msg
#define slotDetail_fields &slotDetail_msg
#define stakeDetail_fields &stakeDetail_msg
#define stateInfoReq_fields &stateInfoReq_msg
#define stateParams_fields &stateParams_msg
#define chargingInfoReq_fields &chargingInfoReq_msg
#define chargingInfoParams_fields &chargingInfoParams_msg
#define hardwareWarnReq_fields &hardwareWarnReq_msg
#define hardwareWarnParams_fields &hardwareWarnParams_msg
#define hardwareWarnServiceReq_fields &hardwareWarnServiceReq_msg
#define hardwareWarnServiceParams_fields &hardwareWarnServiceParams_msg
#define hardwareWarnServiceRsp_fields &hardwareWarnServiceRsp_msg
#define manualReportReq_fields &manualReportReq_msg
#define manualReportParams_fields &manualReportParams_msg
#define manualReportRsp_fields &manualReportRsp_msg
#define enableChargeReq_fields &enableChargeReq_msg
#define enableChargeParams_fields &enableChargeParams_msg
#define enableChargeRsp_fields &enableChargeRsp_msg
#define disableChargeReq_fields &disableChargeReq_msg
#define disableChargeParams_fields &disableChargeParams_msg
#define disableChargeRsp_fields &disableChargeRsp_msg

/* Maximum encoded size of messages (where known) */
/* property_size depends on runtime parameters */
/* propPostReq_size depends on runtime parameters */
/* propGetReq_size depends on runtime parameters */
/* propGetReqParams_size depends on runtime parameters */
/* propGetRsp_size depends on runtime parameters */
/* propSetReq_size depends on runtime parameters */
/* propSetRsp_size depends on runtime parameters */
/* stakeDetail_size depends on runtime parameters */
/* stateInfoReq_size depends on runtime parameters */
/* stateParams_size depends on runtime parameters */
/* hardwareWarnServiceRsp_size depends on runtime parameters */
/* manualReportRsp_size depends on runtime parameters */
/* enableChargeRsp_size depends on runtime parameters */
/* disableChargeRsp_size depends on runtime parameters */
#define chargingInfoParams_size                  7
#define disableChargeParams_size                 3
#define enableChargeParams_size                  9
#define hardwareWarnParams_size                  7
#define hardwareWarnServiceParams_size           9
#define manualReportParams_size                  3
#define slotDetail_size                          38
#if defined(sysReq_size)
#define chargingInfoReq_size                     (15 + sysReq_size)
#define disableChargeReq_size                    (11 + sysReq_size)
#define enableChargeReq_size                     (17 + sysReq_size)
#define hardwareWarnServiceReq_size              (17 + sysReq_size)
#define manualReportReq_size                     (11 + sysReq_size)
#endif
#if defined(sysRsp_size)
#define hardwareWarnReq_size                     (15 + sysRsp_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
