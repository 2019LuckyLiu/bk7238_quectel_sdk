/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_ROUTE_PB_H_INCLUDED
#define PB_ROUTE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* 激活请求 */
typedef struct _activeReq {
    /* 必填，产品编码 */
    char *productKey;
    /* 必填，硬件编码 */
    char *deviceId;
    /* 必填，时间戳 */
    int64_t t;
    /* 必填，deviceId=${deviceId}||productKey=${productKey}||t=${t}${originSecret}字符串的md5签名(共16个字符,取第8-24索引下标) */
    char *sign;
    /* 可填，响应类型，json/protobuf，默认json */
    char *out;
} activeReq;

typedef struct _activeRspData {
    /* 云端编码 */
    char *deviceKey;
    /* 设备激活秘钥 */
    char *deviceSecret;
    /* 时间戳 */
    int64_t t;
    /* deviceKey=${deviceKey}||deviceSecret=${deviceSecret}||t=${t}${originSecret}字符串的md5签名(共16个字符,取第8-24索引下标) */
    char *sign;
    /* 业务编码 */
    char *deviceNo;
} activeRspData;

/* 激活应答 */
typedef struct _activeRsp {
    bool success;
    int16_t code;
    char *msg;
    bool has_data;
    activeRspData data;
} activeRsp;

/* 激活确认请求 */
typedef struct _activeConfirmReq {
    /* 必填，云端编码 */
    char *deviceKey;
    /* 必填，时间戳 */
    int64_t t;
    /* 必填，deviceKey=${deviceKey}||t=${t}${deviceSecret}字符串的md5签名(共16个字符,取第8-24索引下标) */
    char *sign;
    /* 可填，响应类型，json/protobuf，默认json */
    char *out;
} activeConfirmReq;

/* 激活确认应答 */
typedef struct _activeConfirmRsp {
    bool success;
    int16_t code;
    char *msg;
} activeConfirmRsp;

/* 路由请求 */
typedef struct _routeReq {
    /* 必填，云端编码 */
    char *deviceKey;
    /* 必填，时间戳 */
    int64_t t;
    /* 必填，服务类型 mqtt/wss */
    char *channel;
    /* 必填，channel=${channel}||deviceKey=${deviceKey}||t=${t}${deviceSecret}字符串的md5签名(共16个字符,取第8-24索引下标) */
    char *sign;
    /* 可填，响应类型，json/protobuf，默认json */
    char *out;
} routeReq;

typedef struct _routeData {
    /* mqtt连接地址 */
    char *broker;
    /* 时间戳 */
    int64_t t;
    /* broker=${broker}||t=${t}${deviceSecret}字符串的md5签名(共16个字符,取第8-24索引下标) */
    char *sign;
    /* 心跳间隔(单位秒) */
    int16_t keepalive;
    /* 重新激活标记，0不需要重新激活 1需要重新激活 */
    int8_t reactive;
    /* 延迟上报最大间隔(单位秒) */
    int16_t maxReportDelay;
} routeData;

/* 路由应答 */
typedef struct _routeRsp {
    bool success;
    int16_t code;
    char *msg;
    bool has_data;
    routeData data;
} routeRsp;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define activeReq_init_default                   {NULL, NULL, 0, NULL, NULL}
#define activeRsp_init_default                   {0, 0, NULL, false, activeRspData_init_default}
#define activeRspData_init_default               {NULL, NULL, 0, NULL, NULL}
#define activeConfirmReq_init_default            {NULL, 0, NULL, NULL}
#define activeConfirmRsp_init_default            {0, 0, NULL}
#define routeReq_init_default                    {NULL, 0, NULL, NULL, NULL}
#define routeRsp_init_default                    {0, 0, NULL, false, routeData_init_default}
#define routeData_init_default                   {NULL, 0, NULL, 0, 0, 0}
#define activeReq_init_zero                      {NULL, NULL, 0, NULL, NULL}
#define activeRsp_init_zero                      {0, 0, NULL, false, activeRspData_init_zero}
#define activeRspData_init_zero                  {NULL, NULL, 0, NULL, NULL}
#define activeConfirmReq_init_zero               {NULL, 0, NULL, NULL}
#define activeConfirmRsp_init_zero               {0, 0, NULL}
#define routeReq_init_zero                       {NULL, 0, NULL, NULL, NULL}
#define routeRsp_init_zero                       {0, 0, NULL, false, routeData_init_zero}
#define routeData_init_zero                      {NULL, 0, NULL, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define activeReq_productKey_tag                 1
#define activeReq_deviceId_tag                   2
#define activeReq_t_tag                          3
#define activeReq_sign_tag                       4
#define activeReq_out_tag                        5
#define activeRspData_deviceKey_tag              1
#define activeRspData_deviceSecret_tag           2
#define activeRspData_t_tag                      3
#define activeRspData_sign_tag                   4
#define activeRspData_deviceNo_tag               5
#define activeRsp_success_tag                    1
#define activeRsp_code_tag                       2
#define activeRsp_msg_tag                        3
#define activeRsp_data_tag                       4
#define activeConfirmReq_deviceKey_tag           1
#define activeConfirmReq_t_tag                   2
#define activeConfirmReq_sign_tag                3
#define activeConfirmReq_out_tag                 4
#define activeConfirmRsp_success_tag             1
#define activeConfirmRsp_code_tag                2
#define activeConfirmRsp_msg_tag                 3
#define routeReq_deviceKey_tag                   1
#define routeReq_t_tag                           2
#define routeReq_channel_tag                     3
#define routeReq_sign_tag                        4
#define routeReq_out_tag                         5
#define routeData_broker_tag                     1
#define routeData_t_tag                          2
#define routeData_sign_tag                       3
#define routeData_keepalive_tag                  4
#define routeData_reactive_tag                   5
#define routeData_maxReportDelay_tag             6
#define routeRsp_success_tag                     1
#define routeRsp_code_tag                        2
#define routeRsp_msg_tag                         3
#define routeRsp_data_tag                        4

/* Struct field encoding specification for nanopb */
#define activeReq_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   productKey,        1) \
X(a, POINTER,  SINGULAR, STRING,   deviceId,          2) \
X(a, STATIC,   SINGULAR, INT64,    t,                 3) \
X(a, POINTER,  SINGULAR, STRING,   sign,              4) \
X(a, POINTER,  SINGULAR, STRING,   out,               5)
#define activeReq_CALLBACK NULL
#define activeReq_DEFAULT NULL

#define activeRsp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     success,           1) \
X(a, STATIC,   SINGULAR, INT32,    code,              2) \
X(a, POINTER,  SINGULAR, STRING,   msg,               3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              4)
#define activeRsp_CALLBACK NULL
#define activeRsp_DEFAULT NULL
#define activeRsp_data_MSGTYPE activeRspData

#define activeRspData_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   deviceKey,         1) \
X(a, POINTER,  SINGULAR, STRING,   deviceSecret,      2) \
X(a, STATIC,   SINGULAR, INT64,    t,                 3) \
X(a, POINTER,  SINGULAR, STRING,   sign,              4) \
X(a, POINTER,  SINGULAR, STRING,   deviceNo,          5)
#define activeRspData_CALLBACK NULL
#define activeRspData_DEFAULT NULL

#define activeConfirmReq_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   deviceKey,         1) \
X(a, STATIC,   SINGULAR, INT64,    t,                 2) \
X(a, POINTER,  SINGULAR, STRING,   sign,              3) \
X(a, POINTER,  SINGULAR, STRING,   out,               4)
#define activeConfirmReq_CALLBACK NULL
#define activeConfirmReq_DEFAULT NULL

#define activeConfirmRsp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     success,           1) \
X(a, STATIC,   SINGULAR, INT32,    code,              2) \
X(a, POINTER,  SINGULAR, STRING,   msg,               3)
#define activeConfirmRsp_CALLBACK NULL
#define activeConfirmRsp_DEFAULT NULL

#define routeReq_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   deviceKey,         1) \
X(a, STATIC,   SINGULAR, INT64,    t,                 2) \
X(a, POINTER,  SINGULAR, STRING,   channel,           3) \
X(a, POINTER,  SINGULAR, STRING,   sign,              4) \
X(a, POINTER,  SINGULAR, STRING,   out,               5)
#define routeReq_CALLBACK NULL
#define routeReq_DEFAULT NULL

#define routeRsp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     success,           1) \
X(a, STATIC,   SINGULAR, INT32,    code,              2) \
X(a, POINTER,  SINGULAR, STRING,   msg,               3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  data,              4)
#define routeRsp_CALLBACK NULL
#define routeRsp_DEFAULT NULL
#define routeRsp_data_MSGTYPE routeData

#define routeData_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   broker,            1) \
X(a, STATIC,   SINGULAR, INT64,    t,                 2) \
X(a, POINTER,  SINGULAR, STRING,   sign,              3) \
X(a, STATIC,   SINGULAR, INT32,    keepalive,         4) \
X(a, STATIC,   SINGULAR, INT32,    reactive,          5) \
X(a, STATIC,   SINGULAR, INT32,    maxReportDelay,    6)
#define routeData_CALLBACK NULL
#define routeData_DEFAULT NULL

extern const pb_msgdesc_t activeReq_msg;
extern const pb_msgdesc_t activeRsp_msg;
extern const pb_msgdesc_t activeRspData_msg;
extern const pb_msgdesc_t activeConfirmReq_msg;
extern const pb_msgdesc_t activeConfirmRsp_msg;
extern const pb_msgdesc_t routeReq_msg;
extern const pb_msgdesc_t routeRsp_msg;
extern const pb_msgdesc_t routeData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define activeReq_fields &activeReq_msg
#define activeRsp_fields &activeRsp_msg
#define activeRspData_fields &activeRspData_msg
#define activeConfirmReq_fields &activeConfirmReq_msg
#define activeConfirmRsp_fields &activeConfirmRsp_msg
#define routeReq_fields &routeReq_msg
#define routeRsp_fields &routeRsp_msg
#define routeData_fields &routeData_msg

/* Maximum encoded size of messages (where known) */
/* activeReq_size depends on runtime parameters */
/* activeRsp_size depends on runtime parameters */
/* activeRspData_size depends on runtime parameters */
/* activeConfirmReq_size depends on runtime parameters */
/* activeConfirmRsp_size depends on runtime parameters */
/* routeReq_size depends on runtime parameters */
/* routeRsp_size depends on runtime parameters */
/* routeData_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
